/////////////////////////////////////////////////////////////////////////////
// waveform_tables.h
/////////////////////////////////////////////////////////////////////////////

#ifndef WAVEFORM_TABLES_H_
#define WAVEFORM_TABLES_H_

// A full cycle, 12-bit, unsigned sine wave lookup table
SI_SEGMENT_VARIABLE(sineTable[256], uint16_t, const SI_SEG_CODE) = 
{
    0x200,0x20C,0x219,0x225,0x232,0x23E,0x24B,0x257,0x264,
    0x270,0x27C,0x289,0x295,0x2A1,0x2AD,0x2B8,0x2C4,0x2D0,
    0x2DB,0x2E7,0x2F2,0x2FD,0x308,0x312,0x31D,0x327,0x332,
    0x33C,0x345,0x34F,0x358,0x362,0x36B,0x373,0x37C,0x384,
    0x38C,0x394,0x39C,0x3A3,0x3AA,0x3B1,0x3B8,0x3BE,0x3C4,
    0x3CA,0x3CF,0x3D5,0x3D9,0x3DE,0x3E2,0x3E6,0x3EA,0x3EE,
    0x3F1,0x3F4,0x3F6,0x3F8,0x3FA,0x3FC,0x3FD,0x3FE,0x3FF,
    0x3FF,0x3FF,0x3FF,0x3FF,0x3FE,0x3FD,0x3FB,0x3F9,0x3F7,
    0x3F5,0x3F2,0x3EF,0x3EC,0x3E8,0x3E4,0x3E0,0x3DC,0x3D7,
    0x3D2,0x3CD,0x3C7,0x3C1,0x3BB,0x3B4,0x3AE,0x3A7,0x3A0,
    0x398,0x390,0x388,0x380,0x378,0x36F,0x366,0x35D,0x354,
    0x34A,0x340,0x337,0x32C,0x322,0x318,0x30D,0x302,0x2F7,
    0x2EC,0x2E1,0x2D5,0x2CA,0x2BE,0x2B3,0x2A7,0x29B,0x28F,
    0x282,0x276,0x26A,0x25E,0x251,0x245,0x238,0x22C,0x21F,
    0x212,0x206,0x1F9,0x1ED,0x1E0,0x1D3,0x1C7,0x1BA,0x1AE,
    0x1A1,0x195,0x189,0x17D,0x170,0x164,0x158,0x14C,0x141,
    0x135,0x12A,0x11E,0x113,0x108,0xFD,0xF2,0xE7,0xDD,0xD3,
    0xC8,0xBF,0xB5,0xAB,0xA2,0x99,0x90,0x87,0x7F,0x77,0x6F,
    0x67,0x5F,0x58,0x51,0x4B,0x44,0x3E,0x38,0x32,0x2D,0x28,
    0x23,0x1F,0x1B,0x17,0x13,0x10,0xD,0xA,0x8,0x6,0x4,0x2,
    0x1,0x0,0x0,0x0,0x0,0x0,0x1,0x2,0x3,0x5,0x7,0x9,0xB,0xE,
    0x11,0x15,0x19,0x1D,0x21,0x26,0x2A,0x30,0x35,0x3B,0x41,
    0x47,0x4E,0x55,0x5C,0x63,0x6B,0x73,0x7B,0x83,0x8C,0x94,
    0x9D,0xA7,0xB0,0xBA,0xC3,0xCD,0xD8,0xE2,0xED,0xF7,0x102,
    0x10D,0x118,0x124,0x12F,0x13B,0x147,0x152,0x15E,0x16A,
    0x176,0x183,0x18F,0x19B,0x1A8,0x1B4,0x1C1,0x1CD,0x1DA,
    0x1E6,0x1F3,0x1FF,
};

// A full cycle, 12-bit, unsigned square wave lookup table
SI_SEGMENT_VARIABLE(squareTable[256], uint16_t, const SI_SEG_CODE) = 
{
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF, 0xFFF,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
   0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000, 0x000,
};

// A full cycle, 12-bit, unsigned triangle wave lookup table
SI_SEGMENT_VARIABLE(triangleTable[256], uint16_t, const SI_SEG_CODE) = 
{
   0x000, 0x00F, 0x01F, 0x02F, 0x03F, 0x04F, 0x05F, 0x06F,
   0x07F, 0x08F, 0x09F, 0x0AF, 0x0BF, 0x0CF, 0x0DF, 0x0EF,
   0x0FF, 0x10F, 0x11F, 0x12F, 0x13F, 0x14F, 0x15F, 0x16F,
   0x17F, 0x18F, 0x19F, 0x1AF, 0x1BF, 0x1CF, 0x1DF, 0x1EF,
   0x1FF, 0x20F, 0x21F, 0x22F, 0x23F, 0x24F, 0x25F, 0x26F,
   0x27F, 0x28F, 0x29F, 0x2AF, 0x2BF, 0x2CF, 0x2DF, 0x2EF,
   0x2FF, 0x30F, 0x31F, 0x32F, 0x33F, 0x34F, 0x35F, 0x36F,
   0x37F, 0x38F, 0x39F, 0x3AF, 0x3BF, 0x3CF, 0x3DF, 0x3EF,
   0x3FF, 0x40F, 0x41F, 0x42F, 0x43F, 0x44F, 0x45F, 0x46F,
   0x47F, 0x48F, 0x49F, 0x4AF, 0x4BF, 0x4CF, 0x4DF, 0x4EF,
   0x4FF, 0x50F, 0x51F, 0x52F, 0x53F, 0x54F, 0x55F, 0x56F,
   0x57F, 0x58F, 0x59F, 0x5AF, 0x5BF, 0x5CF, 0x5DF, 0x5EF,
   0x5FF, 0x60F, 0x61F, 0x62F, 0x63F, 0x64F, 0x65F, 0x66F,
   0x67F, 0x68F, 0x69F, 0x6AF, 0x6BF, 0x6CF, 0x6DF, 0x6EF,
   0x6FF, 0x70F, 0x71F, 0x72F, 0x73F, 0x74F, 0x75F, 0x76F,
   0x77F, 0x78F, 0x79F, 0x7AF, 0x7BF, 0x7CF, 0x7DF, 0x7EF,
   0x7FF, 0x80F, 0x81F, 0x82F, 0x83F, 0x84F, 0x85F, 0x86F,
   0x87F, 0x88F, 0x89F, 0x8AF, 0x8BF, 0x8CF, 0x8DF, 0x8EF,
   0x8FF, 0x90F, 0x91F, 0x92F, 0x93F, 0x94F, 0x95F, 0x96F,
   0x97F, 0x98F, 0x99F, 0x9AF, 0x9BF, 0x9CF, 0x9DF, 0x9EF,
   0x9FF, 0xA0F, 0xA1F, 0xA2F, 0xA3F, 0xA4F, 0xA5F, 0xA6F,
   0xA7F, 0xA8F, 0xA9F, 0xAAF, 0xABF, 0xACF, 0xADF, 0xAEF,
   0xAFF, 0xB0F, 0xB1F, 0xB2F, 0xB3F, 0xB4F, 0xB5F, 0xB6F,
   0xB7F, 0xB8F, 0xB9F, 0xBAF, 0xBBF, 0xBCF, 0xBDF, 0xBEF,
   0xBFF, 0xC0F, 0xC1F, 0xC2F, 0xC3F, 0xC4F, 0xC5F, 0xC6F,
   0xC7F, 0xC8F, 0xC9F, 0xCAF, 0xCBF, 0xCCF, 0xCDF, 0xCEF,
   0xCFF, 0xD0F, 0xD1F, 0xD2F, 0xD3F, 0xD4F, 0xD5F, 0xD6F,
   0xD7F, 0xD8F, 0xD9F, 0xDAF, 0xDBF, 0xDCF, 0xDDF, 0xDEF,
   0xDFF, 0xE0F, 0xE1F, 0xE2F, 0xE3F, 0xE4F, 0xE5F, 0xE6F,
   0xE7F, 0xE8F, 0xE9F, 0xEAF, 0xEBF, 0xECF, 0xEDF, 0xEEF,
   0xEFF, 0xF0F, 0xF1F, 0xF2F, 0xF3F, 0xF4F, 0xF5F, 0xF6F,
   0xF7F, 0xF8F, 0xF9F, 0xFAF, 0xFBF, 0xFCF, 0xFDF, 0xFEF,
};

// A full cycle, 12-bit, unsigned sawtooth wave lookup table
SI_SEGMENT_VARIABLE(sawtoothTable[256], uint16_t, const SI_SEG_CODE) = 
{
   0x000, 0x01F, 0x03F, 0x05F, 0x07F, 0x09F, 0x0BF, 0x0DF,
   0x0FF, 0x11F, 0x13F, 0x15F, 0x17F, 0x19F, 0x1BF, 0x1DF,
   0x1FF, 0x21F, 0x23F, 0x25F, 0x27F, 0x29F, 0x2BF, 0x2DF,
   0x2FF, 0x31F, 0x33F, 0x35F, 0x37F, 0x39F, 0x3BF, 0x3DF,
   0x3FF, 0x41F, 0x43F, 0x45F, 0x47F, 0x49F, 0x4BF, 0x4DF,
   0x4FF, 0x51F, 0x53F, 0x55F, 0x57F, 0x59F, 0x5BF, 0x5DF,
   0x5FF, 0x61F, 0x63F, 0x65F, 0x67F, 0x69F, 0x6BF, 0x6DF,
   0x6FF, 0x71F, 0x73F, 0x75F, 0x77F, 0x79F, 0x7BF, 0x7DF,
   0x7FF, 0x81F, 0x83F, 0x85F, 0x87F, 0x89F, 0x8BF, 0x8DF,
   0x8FF, 0x91F, 0x93F, 0x95F, 0x97F, 0x99F, 0x9BF, 0x9DF,
   0x9FF, 0xA1F, 0xA3F, 0xA5F, 0xA7F, 0xA9F, 0xABF, 0xADF,
   0xAFF, 0xB1F, 0xB3F, 0xB5F, 0xB7F, 0xB9F, 0xBBF, 0xBDF,
   0xBFF, 0xC1F, 0xC3F, 0xC5F, 0xC7F, 0xC9F, 0xCBF, 0xCDF,
   0xCFF, 0xD1F, 0xD3F, 0xD5F, 0xD7F, 0xD9F, 0xDBF, 0xDDF,
   0xDFF, 0xE1F, 0xE3F, 0xE5F, 0xE7F, 0xE9F, 0xEBF, 0xEDF,
   0xEFF, 0xF1F, 0xF3F, 0xF5F, 0xF7F, 0xF9F, 0xFBF, 0xFDF,
   0xFFF, 0xFDF, 0xFBF, 0xF9F, 0xF7F, 0xF5F, 0xF3F, 0xF1F,
   0xEFF, 0xEDF, 0xEBF, 0xE9F, 0xE7F, 0xE5F, 0xE3F, 0xE1F,
   0xDFF, 0xDDF, 0xDBF, 0xD9F, 0xD7F, 0xD5F, 0xD3F, 0xD1F,
   0xCFF, 0xCDF, 0xCBF, 0xC9F, 0xC7F, 0xC5F, 0xC3F, 0xC1F,
   0xBFF, 0xBDF, 0xBBF, 0xB9F, 0xB7F, 0xB5F, 0xB3F, 0xB1F,
   0xAFF, 0xADF, 0xABF, 0xA9F, 0xA7F, 0xA5F, 0xA3F, 0xA1F,
   0x9FF, 0x9DF, 0x9BF, 0x99F, 0x97F, 0x95F, 0x93F, 0x91F,
   0x8FF, 0x8DF, 0x8BF, 0x89F, 0x87F, 0x85F, 0x83F, 0x81F,
   0x7FF, 0x7DF, 0x7BF, 0x79F, 0x77F, 0x75F, 0x73F, 0x71F,
   0x6FF, 0x6DF, 0x6BF, 0x69F, 0x67F, 0x65F, 0x63F, 0x61F,
   0x5FF, 0x5DF, 0x5BF, 0x59F, 0x57F, 0x55F, 0x53F, 0x51F,
   0x4FF, 0x4DF, 0x4BF, 0x49F, 0x47F, 0x45F, 0x43F, 0x41F,
   0x3FF, 0x3DF, 0x3BF, 0x39F, 0x37F, 0x35F, 0x33F, 0x31F,
   0x2FF, 0x2DF, 0x2BF, 0x29F, 0x27F, 0x25F, 0x23F, 0x21F,
   0x1FF, 0x1DF, 0x1BF, 0x19F, 0x17F, 0x15F, 0x13F, 0x11F,
   0x0FF, 0x0DF, 0x0BF, 0x09F, 0x07F, 0x05F, 0x03F, 0x01F,
};

// A full cycle, 12-bit, unsigned sine(9t) wave windowed
// by sine(t/2) look up table
SI_SEGMENT_VARIABLE(windowedSineTable[256], uint16_t, const SI_SEG_CODE) = 
{
   0x800, 0x805, 0x815, 0x82E, 0x84D, 0x870, 0x892, 0x8AF,
   0x8C4, 0x8CE, 0x8C9, 0x8B4, 0x88D, 0x856, 0x811, 0x7BF,
   0x767, 0x70B, 0x6B3, 0x664, 0x623, 0x5F7, 0x5E3, 0x5EB,
   0x611, 0x655, 0x6B5, 0x72F, 0x7BC, 0x857, 0x8F8, 0x996,
   0xA2A, 0xAA9, 0xB0D, 0xB4E, 0xB67, 0xB54, 0xB15, 0xAAB,
   0xA18, 0x963, 0x894, 0x7B4, 0x6CE, 0x5EE, 0x520, 0x46E,
   0x3E4, 0x38A, 0x366, 0x37B, 0x3CC, 0x454, 0x511, 0x5F9,
   0x702, 0x820, 0x945, 0xA61, 0xB68, 0xC4A, 0xCFC, 0xD73,
   0xDA8, 0xD96, 0xD3C, 0xC9E, 0xBC2, 0xAB1, 0x978, 0x826,
   0x6CB, 0x578, 0x43E, 0x32D, 0x255, 0x1C0, 0x177, 0x180,
   0x1DA, 0x284, 0x376, 0x4A4, 0x602, 0x77D, 0x905, 0xA85,
   0xBEB, 0xD24, 0xE21, 0xED3, 0xF32, 0xF37, 0xEE2, 0xE36,
   0xD39, 0xBF9, 0xA83, 0x8EA, 0x742, 0x5A0, 0x418, 0x2BD,
   0x1A2, 0x0D4, 0x05F, 0x048, 0x092, 0x13A, 0x237, 0x37E,
   0x4FF, 0x6A7, 0x863, 0xA1B, 0xBBA, 0xD2D, 0xE60, 0xF44,
   0xFCE, 0xFF7, 0xFBD, 0xF21, 0xE2D, 0xCEB, 0xB6B, 0x9C0,
   0x800, 0x63F, 0x494, 0x314, 0x1D2, 0x0DE, 0x042, 0x008,
   0x031, 0x0BB, 0x19F, 0x2D2, 0x445, 0x5E4, 0x79C, 0x958,
   0xB00, 0xC81, 0xDC8, 0xEC5, 0xF6D, 0xFB7, 0xFA0, 0xF2B,
   0xE5D, 0xD42, 0xBE7, 0xA5F, 0x8BD, 0x715, 0x57C, 0x406,
   0x2C6, 0x1C9, 0x11D, 0x0C8, 0x0CD, 0x12C, 0x1DE, 0x2DB,
   0x414, 0x57A, 0x6FA, 0x882, 0x9FD, 0xB5B, 0xC89, 0xD7B,
   0xE25, 0xE7F, 0xE88, 0xE3F, 0xDAA, 0xCD2, 0xBC1, 0xA87,
   0x934, 0x7D9, 0x687, 0x54E, 0x43D, 0x361, 0x2C3, 0x269,
   0x257, 0x28C, 0x303, 0x3B5, 0x497, 0x59E, 0x6BA, 0x7DF,
   0x8FD, 0xA06, 0xAEE, 0xBAB, 0xC33, 0xC84, 0xC99, 0xC75,
   0xC1B, 0xB91, 0xADF, 0xA11, 0x931, 0x84B, 0x76B, 0x69C,
   0x5E7, 0x554, 0x4EA, 0x4AB, 0x498, 0x4B1, 0x4F2, 0x556,
   0x5D5, 0x669, 0x707, 0x7A8, 0x843, 0x8D0, 0x94A, 0x9AA,
   0x9EE, 0xA14, 0xA1C, 0xA08, 0x9DC, 0x99B, 0x94C, 0x8F4,
   0x898, 0x840, 0x7EE, 0x7A9, 0x772, 0x74B, 0x736, 0x731,
   0x73B, 0x750, 0x76D, 0x78F, 0x7B2, 0x7D1, 0x7EA, 0x7FA,
};

#endif /* WAVEFORM_TABLES_H_ */
