C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\markh\O
                    -neDrive\Documents\Uni\4th Year\Eng\EE4\LaserBee\LaserBeeAudio\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) 
                    -WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\markh\OneDr
                    -ive\Documents\Uni\4th Year\Eng\EE4\LaserBee\LaserBeeAudio\inc;C:\Users\markh\OneDrive\Documents\Uni\4th Year\Eng\EE4\Las
                    -erBee\LaserBeeAudio\inc\config;C:\Users\markh\OneDrive\Documents\Uni\4th Year\Eng\EE4\LaserBee\LaserBeeAudio\inc\graphic
                    -s;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//Device/EFM8LB1/peripheral_driver/inc;C:/SiliconLabs/Sim
                    -plicityStudio/v5/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_joystick;C:/SiliconLabs/SimplicityStudio/v5/develo
                    -per/sdks/8051/v4.2.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//kits/EFM8LB1_SLSTK2
                    -030A/config;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_retargetserial;C:/Si
                    -liconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/de
                    -veloper/sdks/8051/v4.2.3//Device/EFM8LB1/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//kits/common/
                    -drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_memo
                    -ry_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_memory_lcd/i
                    -nc/config) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8LB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          #include "function_generator.h"
  13          
  14          // $[Library Includes]
  15          // [Library Includes]$
  16          
  17          extern void
  18          enter_DefaultMode_from_RESET (void)
  19          {
  20   1        // $[Config Calls]
  21   1        // Save the SFRPAGE
  22   1        uint8_t SFRPAGE_save = SFRPAGE;
  23   1        WDT_0_enter_DefaultMode_from_RESET ();
  24   1        PORTS_0_enter_DefaultMode_from_RESET ();
  25   1        PORTS_1_enter_DefaultMode_from_RESET ();
  26   1        PORTS_2_enter_DefaultMode_from_RESET ();
  27   1        PORTS_3_enter_DefaultMode_from_RESET ();
  28   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  29   1        ADC_0_enter_DefaultMode_from_RESET ();
  30   1        DAC_0_enter_DefaultMode_from_RESET ();
  31   1        DAC_1_enter_DefaultMode_from_RESET ();
  32   1        DAC_2_enter_DefaultMode_from_RESET ();
  33   1        DAC_3_enter_DefaultMode_from_RESET ();
  34   1        DACGCF_0_enter_DefaultMode_from_RESET ();
  35   1        VREF_0_enter_DefaultMode_from_RESET ();
  36   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  37   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  38   1        TIMER16_3_enter_DefaultMode_from_RESET ();
  39   1        TIMER16_4_enter_DefaultMode_from_RESET ();
  40   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  41   1        SPI_0_enter_DefaultMode_from_RESET ();
  42   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  43   1        // Restore the SFRPAGE
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 2   

  44   1        SFRPAGE = SFRPAGE_save;
  45   1        // [Config Calls]$
  46   1      
  47   1      }
  48          
  49          extern void
  50          WDT_0_enter_DefaultMode_from_RESET (void)
  51          {
  52   1        // $[Watchdog Timer Init Variable Declarations]
  53   1        uint32_t i;
  54   1        bool ea;
  55   1        // [Watchdog Timer Init Variable Declarations]$
  56   1      
  57   1        // $[WDTCN - Watchdog Timer Control]
  58   1        // Deprecated
  59   1        // [WDTCN - Watchdog Timer Control]$
  60   1      
  61   1        // $[WDTCN_2 - Watchdog Timer Control]
  62   1        SFRPAGE = 0x00;
  63   1      
  64   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  65   1        WDTCN = 0xA5;
  66   1      
  67   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  68   1        for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++)
  69   1          {
  70   2            NOP ();
  71   2          }
  72   1      
  73   1        // Disable WDT
  74   1        ea = IE_EA;
  75   1        IE_EA = 0;
  76   1        WDTCN = 0xDE;
  77   1        WDTCN = 0xAD;
  78   1        IE_EA = ea;
  79   1      
  80   1        // [WDTCN_2 - Watchdog Timer Control]$
  81   1      
  82   1      }
  83          
  84          extern void
  85          PORTS_0_enter_DefaultMode_from_RESET (void)
  86          {
  87   1        // $[P0 - Port 0 Pin Latch]
  88   1        // [P0 - Port 0 Pin Latch]$
  89   1      
  90   1        // $[P0MDOUT - Port 0 Output Mode]
  91   1        /***********************************************************************
  92   1         - P0.0 output is open-drain
  93   1         - P0.1 output is open-drain
  94   1         - P0.2 output is open-drain
  95   1         - P0.3 output is open-drain
  96   1         - P0.4 output is open-drain
  97   1         - P0.5 output is open-drain
  98   1         - P0.6 output is push-pull
  99   1         - P0.7 output is open-drain
 100   1         ***********************************************************************/
 101   1        P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 102   1            | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__OPEN_DRAIN
 103   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 104   1        // [P0MDOUT - Port 0 Output Mode]$
 105   1      
 106   1        // $[P0MDIN - Port 0 Input Mode]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 3   

 107   1        /***********************************************************************
 108   1         - P0.0 pin is configured for analog mode
 109   1         - P0.1 pin is configured for digital mode
 110   1         - P0.2 pin is configured for digital mode
 111   1         - P0.3 pin is configured for digital mode
 112   1         - P0.4 pin is configured for digital mode
 113   1         - P0.5 pin is configured for digital mode
 114   1         - P0.6 pin is configured for digital mode
 115   1         - P0.7 pin is configured for digital mode
 116   1         ***********************************************************************/
 117   1        P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 118   1            | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 119   1            | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 120   1        // [P0MDIN - Port 0 Input Mode]$
 121   1      
 122   1        // $[P0SKIP - Port 0 Skip]
 123   1        /***********************************************************************
 124   1         - P0.0 pin is skipped by the crossbar
 125   1         - P0.1 pin is skipped by the crossbar
 126   1         - P0.2 pin is skipped by the crossbar
 127   1         - P0.3 pin is skipped by the crossbar
 128   1         - P0.4 pin is skipped by the crossbar
 129   1         - P0.5 pin is skipped by the crossbar
 130   1         - P0.6 pin is not skipped by the crossbar
 131   1         - P0.7 pin is not skipped by the crossbar
 132   1         ***********************************************************************/
 133   1        P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 134   1            | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 135   1            | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 136   1        // [P0SKIP - Port 0 Skip]$
 137   1      
 138   1        // $[P0MASK - Port 0 Mask]
 139   1        /***********************************************************************
 140   1         - P0.0 pin logic value is ignored and will not cause a port mismatch
 141   1         event
 142   1         - P0.1 pin logic value is ignored and will not cause a port mismatch
 143   1         event
 144   1         - P0.2 pin logic value is compared to P0MAT.2
 145   1         - P0.3 pin logic value is compared to P0MAT.3
 146   1         - P0.4 pin logic value is ignored and will not cause a port mismatch
 147   1         event
 148   1         - P0.5 pin logic value is ignored and will not cause a port mismatch
 149   1         event
 150   1         - P0.6 pin logic value is ignored and will not cause a port mismatch
 151   1         event
 152   1         - P0.7 pin logic value is ignored and will not cause a port mismatch
 153   1         event
 154   1         ***********************************************************************/
 155   1        P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 156   1            | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 157   1            | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 158   1        // [P0MASK - Port 0 Mask]$
 159   1      
 160   1        // $[P0MAT - Port 0 Match]
 161   1        // [P0MAT - Port 0 Match]$
 162   1      
 163   1      }
 164          
 165          extern void
 166          PORTS_1_enter_DefaultMode_from_RESET (void)
 167          {
 168   1        // $[P1 - Port 1 Pin Latch]
 169   1        // [P1 - Port 1 Pin Latch]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 4   

 170   1      
 171   1        // $[P1MDOUT - Port 1 Output Mode]
 172   1        /***********************************************************************
 173   1         - P1.0 output is push-pull
 174   1         - P1.1 output is open-drain
 175   1         - P1.2 output is open-drain
 176   1         - P1.3 output is open-drain
 177   1         - P1.4 output is open-drain
 178   1         - P1.5 output is open-drain
 179   1         - P1.6 output is open-drain
 180   1         - P1.7 output is open-drain
 181   1         ***********************************************************************/
 182   1        P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 183   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN
 184   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 185   1            | P1MDOUT_B7__OPEN_DRAIN;
 186   1        // [P1MDOUT - Port 1 Output Mode]$
 187   1      
 188   1        // $[P1MDIN - Port 1 Input Mode]
 189   1        /***********************************************************************
 190   1         - P1.0 pin is configured for digital mode
 191   1         - P1.1 pin is configured for analog mode
 192   1         - P1.2 pin is configured for digital mode
 193   1         - P1.3 pin is configured for digital mode
 194   1         - P1.4 pin is configured for digital mode
 195   1         - P1.5 pin is configured for digital mode
 196   1         - P1.6 pin is configured for digital mode
 197   1         - P1.7 pin is configured for analog mode
 198   1         ***********************************************************************/
 199   1        P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 200   1            | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 201   1            | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 202   1        // [P1MDIN - Port 1 Input Mode]$
 203   1      
 204   1        // $[P1SKIP - Port 1 Skip]
 205   1        /***********************************************************************
 206   1         - P1.0 pin is not skipped by the crossbar
 207   1         - P1.1 pin is skipped by the crossbar
 208   1         - P1.2 pin is skipped by the crossbar
 209   1         - P1.3 pin is skipped by the crossbar
 210   1         - P1.4 pin is skipped by the crossbar
 211   1         - P1.5 pin is skipped by the crossbar
 212   1         - P1.6 pin is skipped by the crossbar
 213   1         - P1.7 pin is skipped by the crossbar
 214   1         ***********************************************************************/
 215   1        P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 216   1            | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 217   1            | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 218   1        // [P1SKIP - Port 1 Skip]$
 219   1      
 220   1        // $[P1MASK - Port 1 Mask]
 221   1        // [P1MASK - Port 1 Mask]$
 222   1      
 223   1        // $[P1MAT - Port 1 Match]
 224   1        // [P1MAT - Port 1 Match]$
 225   1      
 226   1      }
 227          
 228          extern void
 229          PORTS_2_enter_DefaultMode_from_RESET (void)
 230          {
 231   1        // $[P2 - Port 2 Pin Latch]
 232   1        // [P2 - Port 2 Pin Latch]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 5   

 233   1      
 234   1        // $[P2MDOUT - Port 2 Output Mode]
 235   1        /***********************************************************************
 236   1         - P2.0 output is open-drain
 237   1         - P2.1 output is open-drain
 238   1         - P2.2 output is open-drain
 239   1         - P2.3 output is open-drain
 240   1         - P2.4 output is open-drain
 241   1         - P2.5 output is open-drain
 242   1         - P2.6 output is push-pull
 243   1         ***********************************************************************/
 244   1        P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 245   1            | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN | P2MDOUT_B4__OPEN_DRAIN
 246   1            | P2MDOUT_B5__OPEN_DRAIN | P2MDOUT_B6__PUSH_PULL;
 247   1        // [P2MDOUT - Port 2 Output Mode]$
 248   1      
 249   1        // $[P2MDIN - Port 2 Input Mode]
 250   1        // [P2MDIN - Port 2 Input Mode]$
 251   1      
 252   1        // $[P2SKIP - Port 2 Skip]
 253   1        /***********************************************************************
 254   1         - P2.0 pin is not skipped by the crossbar
 255   1         - P2.1 pin is not skipped by the crossbar
 256   1         - P2.2 pin is not skipped by the crossbar
 257   1         - P2.3 pin is skipped by the crossbar
 258   1         ***********************************************************************/
 259   1        SFRPAGE = 0x20;
 260   1        P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 261   1            | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 262   1        // [P2SKIP - Port 2 Skip]$
 263   1      
 264   1        // $[P2MASK - Port 2 Mask]
 265   1        // [P2MASK - Port 2 Mask]$
 266   1      
 267   1        // $[P2MAT - Port 2 Match]
 268   1        // [P2MAT - Port 2 Match]$
 269   1      
 270   1      }
 271          
 272          extern void
 273          PBCFG_0_enter_DefaultMode_from_RESET (void)
 274          {
 275   1        // $[XBR2 - Port I/O Crossbar 2]
 276   1        /***********************************************************************
 277   1         - Weak Pullups enabled 
 278   1         - Crossbar enabled
 279   1         - UART1 I/O unavailable at Port pin
 280   1         - UART1 RTS1 unavailable at Port pin
 281   1         - UART1 CTS1 unavailable at Port pin
 282   1         ***********************************************************************/
 283   1        SFRPAGE = 0x00;
 284   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 285   1            | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 286   1            | XBR2_URT1CTSE__DISABLED;
 287   1        // [XBR2 - Port I/O Crossbar 2]$
 288   1      
 289   1        // $[PRTDRV - Port Drive Strength]
 290   1        // [PRTDRV - Port Drive Strength]$
 291   1      
 292   1        // $[XBR0 - Port I/O Crossbar 0]
 293   1        // [XBR0 - Port I/O Crossbar 0]$
 294   1      
 295   1        // $[XBR1 - Port I/O Crossbar 1]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 6   

 296   1        // [XBR1 - Port I/O Crossbar 1]$
 297   1      
 298   1      }
 299          
 300          extern void
 301          DAC_0_enter_DefaultMode_from_RESET (void)
 302          {
 303   1        // $[DAC0CF0 - DAC0 Configuration 0]
 304   1        /***********************************************************************
 305   1         - DAC0 is enabled and will drive the output pin
 306   1         - DAC0 output updates occur on Timer 4 high byte overflow
 307   1         - DAC0 input is treated as right-justified
 308   1         - All resets will reset DAC0 and its associated registers
 309   1         ***********************************************************************/
 310   1        SFRPAGE = 0x30;
 311   1        DAC0CF0 = DAC0CF0_EN__ENABLE | DAC0CF0_UPDATE__TIMER4
 312   1            | DAC0CF0_LJST__RIGHT_JUSTIFY | DAC0CF0_RSTMD__NORMAL;
 313   1        // [DAC0CF0 - DAC0 Configuration 0]$
 314   1      
 315   1        // $[DAC0CF1 - DAC0 Configuration 1]
 316   1        // [DAC0CF1 - DAC0 Configuration 1]$
 317   1      
 318   1      }
 319          
 320          extern void
 321          DAC_1_enter_DefaultMode_from_RESET (void)
 322          {
 323   1        // $[DAC1CF0 - DAC1 Configuration 0]
 324   1        /***********************************************************************
 325   1         - DAC1 is enabled and will drive the output pin
 326   1         - DAC1 output updates occur on Timer 4 high byte overflow
 327   1         - DAC1 input is treated as right-justified
 328   1         - All resets will reset DAC1 and its associated registers
 329   1         ***********************************************************************/
 330   1        DAC1CF0 = DAC1CF0_EN__ENABLE | DAC1CF0_UPDATE__TIMER4
 331   1            | DAC1CF0_LJST__RIGHT_JUSTIFY | DAC1CF0_RSTMD__NORMAL;
 332   1        // [DAC1CF0 - DAC1 Configuration 0]$
 333   1      
 334   1        // $[DAC1CF1 - DAC1 Configuration 1]
 335   1        // [DAC1CF1 - DAC1 Configuration 1]$
 336   1      
 337   1      }
 338          
 339          extern void
 340          DAC_2_enter_DefaultMode_from_RESET (void)
 341          {
 342   1        // $[DAC2CF0 - DAC2 Configuration 0]
 343   1        /***********************************************************************
 344   1         - DAC2 is enabled and will drive the output pin
 345   1         - DAC2 output updates occur on Timer 4 high byte overflow
 346   1         - DAC2 input is treated as right-justified
 347   1         - All resets will reset DAC2 and its associated registers
 348   1         ***********************************************************************/
 349   1        DAC2CF0 = DAC2CF0_EN__ENABLE | DAC2CF0_UPDATE__TIMER4
 350   1            | DAC2CF0_LJST__RIGHT_JUSTIFY | DAC2CF0_RSTMD__NORMAL;
 351   1        // [DAC2CF0 - DAC2 Configuration 0]$
 352   1      
 353   1        // $[DAC2CF1 - DAC2 Configuration 1]
 354   1        // [DAC2CF1 - DAC2 Configuration 1]$
 355   1      
 356   1      }
 357          
 358          extern void
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 7   

 359          DAC_3_enter_DefaultMode_from_RESET (void)
 360          {
 361   1        // $[DAC3CF0 - DAC3 Configuration 0]
 362   1        /***********************************************************************
 363   1         - DAC3 is enabled and will drive the output pin
 364   1         - DAC3 output updates occur on Timer 4 high byte overflow
 365   1         - DAC3 input is treated as right-justified
 366   1         - All resets will reset DAC3 and its associated registers
 367   1         ***********************************************************************/
 368   1        DAC3CF0 = DAC3CF0_EN__ENABLE | DAC3CF0_UPDATE__TIMER4
 369   1            | DAC3CF0_LJST__RIGHT_JUSTIFY | DAC3CF0_RSTMD__NORMAL;
 370   1        // [DAC3CF0 - DAC3 Configuration 0]$
 371   1      
 372   1        // $[DAC3CF1 - DAC3 Configuration 1]
 373   1        // [DAC3CF1 - DAC3 Configuration 1]$
 374   1      
 375   1      }
 376          
 377          extern void
 378          DACGCF_0_enter_DefaultMode_from_RESET (void)
 379          {
 380   1        // $[DACGCF0 - DAC Global Configuration 0]
 381   1        /***********************************************************************
 382   1         - Select the VREF pin
 383   1         - Select the VREF pin
 384   1         - Input = DAC1H:DAC1L
 385   1         - Input = DAC3H:DAC3L
 386   1         - DAC1 always updates from the data source selected in D1SRC
 387   1         - DAC3 always updates from the data source selected in D3SRC
 388   1         ***********************************************************************/
 389   1        DACGCF0 = DACGCF0_D01REFSL__VREF | DACGCF0_D23REFSL__VREF
 390   1            | DACGCF0_D1SRC__DAC1 | DACGCF0_D3SRC__DAC3 | DACGCF0_D1AMEN__NORMAL
 391   1            | DACGCF0_D3AMEN__NORMAL;
 392   1        // [DACGCF0 - DAC Global Configuration 0]$
 393   1      
 394   1        // $[DACGCF2 - DAC Global Configuration 2]
 395   1        // [DACGCF2 - DAC Global Configuration 2]$
 396   1      
 397   1      }
 398          
 399          extern void
 400          VREF_0_enter_DefaultMode_from_RESET (void)
 401          {
 402   1        // $[REF0CN - Voltage Reference Control]
 403   1        /***********************************************************************
 404   1         - 2.4 V reference output to VREF pin
 405   1         ***********************************************************************/
 406   1        SFRPAGE = 0x00;
 407   1        REF0CN = REF0CN_VREFSL__VREF_2P4;
 408   1        // [REF0CN - Voltage Reference Control]$
 409   1      
 410   1      }
 411          
 412          extern void
 413          CLOCK_0_enter_DefaultMode_from_RESET (void)
 414          {
 415   1        // $[HFOSC1 Setup]
 416   1        // [HFOSC1 Setup]$
 417   1      
 418   1        // $[CLKSEL - Clock Select]
 419   1        /***********************************************************************
 420   1         - Clock derived from the Internal High Frequency Oscillator 0
 421   1         - SYSCLK is equal to selected clock source divided by 1
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 8   

 422   1         ***********************************************************************/
 423   1        CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 424   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 425   1          ;
 426   1        // [CLKSEL - Clock Select]$
 427   1      
 428   1      }
 429          
 430          extern void
 431          TIMER01_0_enter_DefaultMode_from_RESET (void)
 432          {
 433   1        // $[Timer Initialization]
 434   1        //Save Timer Configuration
 435   1        uint8_t TCON_save;
 436   1        TCON_save = TCON;
 437   1        //Stop Timers
 438   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 439   1      
 440   1        // [Timer Initialization]$
 441   1      
 442   1        // $[TH0 - Timer 0 High Byte]
 443   1        /***********************************************************************
 444   1         - Timer 0 High Byte = 0x01
 445   1         ***********************************************************************/
 446   1        TH0 = (0x01 << TH0_TH0__SHIFT);
 447   1        // [TH0 - Timer 0 High Byte]$
 448   1      
 449   1        // $[TL0 - Timer 0 Low Byte]
 450   1        // [TL0 - Timer 0 Low Byte]$
 451   1      
 452   1        // $[TH1 - Timer 1 High Byte]
 453   1        // [TH1 - Timer 1 High Byte]$
 454   1      
 455   1        // $[TL1 - Timer 1 Low Byte]
 456   1        // [TL1 - Timer 1 Low Byte]$
 457   1      
 458   1        // $[Timer Restoration]
 459   1        //Restore Timer Configuration
 460   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 461   1      
 462   1        // [Timer Restoration]$
 463   1      
 464   1      }
 465          
 466          extern void
 467          TIMER16_3_enter_DefaultMode_from_RESET (void)
 468          {
 469   1        // $[Timer Initialization]
 470   1        // Save Timer Configuration
 471   1        uint8_t TMR3CN0_TR3_save;
 472   1        TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 473   1        // Stop Timer
 474   1        TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 475   1        // [Timer Initialization]$
 476   1      
 477   1        // $[TMR3CN1 - Timer 3 Control 1]
 478   1        // [TMR3CN1 - Timer 3 Control 1]$
 479   1      
 480   1        // $[TMR3CN0 - Timer 3 Control]
 481   1        // [TMR3CN0 - Timer 3 Control]$
 482   1      
 483   1        // $[TMR3H - Timer 3 High Byte]
 484   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 9   

 485   1         - Timer 3 High Byte = 0xF8
 486   1         ***********************************************************************/
 487   1        TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 488   1        // [TMR3H - Timer 3 High Byte]$
 489   1      
 490   1        // $[TMR3L - Timer 3 Low Byte]
 491   1        /***********************************************************************
 492   1         - Timer 3 Low Byte = 0x06
 493   1         ***********************************************************************/
 494   1        TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 495   1        // [TMR3L - Timer 3 Low Byte]$
 496   1      
 497   1        // $[TMR3RLH - Timer 3 Reload High Byte]
 498   1        /***********************************************************************
 499   1         - Timer 3 Reload High Byte = 0xF8
 500   1         ***********************************************************************/
 501   1        TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 502   1        // [TMR3RLH - Timer 3 Reload High Byte]$
 503   1      
 504   1        // $[TMR3RLL - Timer 3 Reload Low Byte]
 505   1        /***********************************************************************
 506   1         - Timer 3 Reload Low Byte = 0x06
 507   1         ***********************************************************************/
 508   1        TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 509   1        // [TMR3RLL - Timer 3 Reload Low Byte]$
 510   1      
 511   1        // $[TMR3CN0]
 512   1        /***********************************************************************
 513   1         - Start Timer 3 running
 514   1         ***********************************************************************/
 515   1        TMR3CN0 |= TMR3CN0_TR3__RUN;
 516   1        // [TMR3CN0]$
 517   1      
 518   1        // $[Timer Restoration]
 519   1        // Restore Timer Configuration
 520   1        TMR3CN0 |= TMR3CN0_TR3_save;
 521   1        // [Timer Restoration]$
 522   1      
 523   1      }
 524          
 525          extern void
 526          TIMER16_4_enter_DefaultMode_from_RESET (void)
 527          {
 528   1        // $[Timer Initialization]
 529   1        // Save Timer Configuration
 530   1        uint8_t TMR4CN0_TR4_save;
 531   1        SFRPAGE = 0x10;
 532   1        TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 533   1        // Stop Timer
 534   1        TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 535   1        // [Timer Initialization]$
 536   1      
 537   1        // $[TMR4CN1 - Timer 4 Control 1]
 538   1        // [TMR4CN1 - Timer 4 Control 1]$
 539   1      
 540   1        // $[TMR4CN0 - Timer 4 Control]
 541   1        // [TMR4CN0 - Timer 4 Control]$
 542   1      
 543   1        // $[TMR4H - Timer 4 High Byte]
 544   1        /***********************************************************************
 545   1         - Timer 4 High Byte = 0xFE
 546   1         ***********************************************************************/
 547   1        TMR4H = (0xFE << TMR4H_TMR4H__SHIFT);
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 10  

 548   1        // [TMR4H - Timer 4 High Byte]$
 549   1      
 550   1        // $[TMR4L - Timer 4 Low Byte]
 551   1        /***********************************************************************
 552   1         - Timer 4 Low Byte = 0x68
 553   1         ***********************************************************************/
 554   1        TMR4L = (0x68 << TMR4L_TMR4L__SHIFT);
 555   1        // [TMR4L - Timer 4 Low Byte]$
 556   1      
 557   1        // $[TMR4RLH - Timer 4 Reload High Byte]
 558   1        /***********************************************************************
 559   1         - Timer 4 Reload High Byte = 0xFE
 560   1         ***********************************************************************/
 561   1        TMR4RLH = (0xFE << TMR4RLH_TMR4RLH__SHIFT);
 562   1        // [TMR4RLH - Timer 4 Reload High Byte]$
 563   1      
 564   1        // $[TMR4RLL - Timer 4 Reload Low Byte]
 565   1        /***********************************************************************
 566   1         - Timer 4 Reload Low Byte = 0x68
 567   1         ***********************************************************************/
 568   1        TMR4RLL = (0x68 << TMR4RLL_TMR4RLL__SHIFT);
 569   1        // [TMR4RLL - Timer 4 Reload Low Byte]$
 570   1      
 571   1        TMR4RL = -SYSCLK / SAMPLE_RATE_DAC;
 572   1      
 573   1        // $[TMR4CN0]
 574   1        /***********************************************************************
 575   1         - Start Timer 4 running
 576   1         ***********************************************************************/
 577   1        TMR4CN0 |= TMR4CN0_TR4__RUN;
 578   1        // [TMR4CN0]$
 579   1      
 580   1        // $[Timer Restoration]
 581   1        // Restore Timer Configuration
 582   1        TMR4CN0 |= TMR4CN0_TR4_save;
 583   1        // [Timer Restoration]$
 584   1      
 585   1      }
 586          
 587          extern void
 588          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 589          {
 590   1        // $[CKCON0 - Clock Control 0]
 591   1        /***********************************************************************
 592   1         - System clock divided by 48
 593   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 594   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 595   1         - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 596   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 597   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 598   1         - Timer 1 uses the clock defined by the prescale field, SCA
 599   1         ***********************************************************************/
 600   1        SFRPAGE = 0x00;
 601   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 602   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 603   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 604   1            | CKCON0_T1M__PRESCALE;
 605   1        // [CKCON0 - Clock Control 0]$
 606   1      
 607   1        // $[CKCON1 - Clock Control 1]
 608   1        /***********************************************************************
 609   1         - Timer 4 high byte uses the clock defined by T4XCLK in TMR4CN0
 610   1         - Timer 4 low byte uses the system clock
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 11  

 611   1         - Timer 5 high byte uses the clock defined by T5XCLK in TMR5CN0
 612   1         - Timer 5 low byte uses the clock defined by T5XCLK in TMR5CN0
 613   1         ***********************************************************************/
 614   1        SFRPAGE = 0x10;
 615   1        CKCON1 = CKCON1_T4MH__EXTERNAL_CLOCK | CKCON1_T4ML__SYSCLK
 616   1            | CKCON1_T5MH__EXTERNAL_CLOCK | CKCON1_T5ML__EXTERNAL_CLOCK;
 617   1        // [CKCON1 - Clock Control 1]$
 618   1      
 619   1        // $[TMOD - Timer 0/1 Mode]
 620   1        /***********************************************************************
 621   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 622   1         - Mode 0, 13-bit Counter/Timer
 623   1         - Timer Mode
 624   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 625   1         - Timer Mode
 626   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 627   1         ***********************************************************************/
 628   1        SFRPAGE = 0x00;
 629   1        TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 630   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 631   1        // [TMOD - Timer 0/1 Mode]$
 632   1      
 633   1        // $[TCON - Timer 0/1 Control]
 634   1        /***********************************************************************
 635   1         - Start Timer 0 running
 636   1         ***********************************************************************/
 637   1        TCON |= TCON_TR0__RUN;
 638   1        // [TCON - Timer 0/1 Control]$
 639   1      
 640   1      }
 641          
 642          extern void
 643          SPI_0_enter_DefaultMode_from_RESET (void)
 644          {
 645   1        // $[SPI0CKR - SPI0 Clock Rate]
 646   1        /***********************************************************************
 647   1         - SPI0 Clock Rate = 0x0B
 648   1         ***********************************************************************/
 649   1        SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 650   1        // [SPI0CKR - SPI0 Clock Rate]$
 651   1      
 652   1        // $[SPI0CFG - SPI0 Configuration]
 653   1        /***********************************************************************
 654   1         - Enable master mode. Operate as a master
 655   1         ***********************************************************************/
 656   1        SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 657   1        // [SPI0CFG - SPI0 Configuration]$
 658   1      
 659   1        // $[SPI0CN0 - SPI0 Control]
 660   1        /***********************************************************************
 661   1         - Enable the SPI module
 662   1         - 3-Wire Slave or 3-Wire Master Mode
 663   1         ***********************************************************************/
 664   1        SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 665   1        SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 666   1        // [SPI0CN0 - SPI0 Control]$
 667   1      
 668   1        // $[SPI0PCF - SPI0 Pin Configuration]
 669   1        // [SPI0PCF - SPI0 Pin Configuration]$
 670   1      
 671   1        // $[SPI0FCN0 - SPI0 FIFO Control 0]
 672   1        // [SPI0FCN0 - SPI0 FIFO Control 0]$
 673   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 12  

 674   1        // $[SPI0FCN1 - SPI0 FIFO Control 1]
 675   1        // [SPI0FCN1 - SPI0 FIFO Control 1]$
 676   1      
 677   1      }
 678          
 679          extern void
 680          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 681          {
 682   1        // $[EIE1 - Extended Interrupt Enable 1]
 683   1        /***********************************************************************
 684   1         - Disable ADC0 Conversion Complete interrupt
 685   1         - Disable ADC0 Window Comparison interrupt
 686   1         - Disable CP0 interrupts
 687   1         - Disable CP1 interrupts
 688   1         - Enable interrupt requests generated by a Port Match
 689   1         - Disable all PCA0 interrupts
 690   1         - Disable all SMB0 interrupts
 691   1         - Enable interrupt requests generated by the TF3L or TF3H flags
 692   1         ***********************************************************************/
 693   1        EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 694   1            | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 695   1            | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 696   1        // [EIE1 - Extended Interrupt Enable 1]$
 697   1      
 698   1        // $[EIE2 - Extended Interrupt Enable 2]
 699   1        /***********************************************************************
 700   1         - Disable CL0 interrupts
 701   1         - Disable all I2C0 slave interrupts
 702   1         - Enable interrupt requests generated by the TF4L or TF4H flags
 703   1         - Disable Timer 5 interrupts
 704   1         - Disable UART1 interrupts
 705   1         ***********************************************************************/
 706   1        EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__DISABLED | EIE2_ET4__ENABLED
 707   1            | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 708   1        // [EIE2 - Extended Interrupt Enable 2]$
 709   1      
 710   1        // $[EIP1H - Extended Interrupt Priority 1 High]
 711   1        /***********************************************************************
 712   1         - ADC0 Conversion Complete interrupt priority MSB set to low
 713   1         - ADC0 Window interrupt priority MSB set to low
 714   1         - CP0 interrupt priority MSB set to low
 715   1         - CP1 interrupt priority MSB set to low
 716   1         - Port Match interrupt priority MSB set to high
 717   1         - PCA0 interrupt priority MSB set to low
 718   1         - SMB0 interrupt priority MSB set to low
 719   1         - Timer 3 interrupt priority MSB set to high
 720   1         ***********************************************************************/
 721   1        SFRPAGE = 0x10;
 722   1        EIP1H = EIP1H_PHADC0__LOW | EIP1H_PHWADC0__LOW | EIP1H_PHCP0__LOW
 723   1            | EIP1H_PHCP1__LOW | EIP1H_PHMAT__HIGH | EIP1H_PHPCA0__LOW
 724   1            | EIP1H_PHSMB0__LOW | EIP1H_PHT3__HIGH;
 725   1        // [EIP1H - Extended Interrupt Priority 1 High]$
 726   1      
 727   1        // $[EIP1 - Extended Interrupt Priority 1 Low]
 728   1        // [EIP1 - Extended Interrupt Priority 1 Low]$
 729   1      
 730   1        // $[EIP2 - Extended Interrupt Priority 2]
 731   1        /***********************************************************************
 732   1         - CL0 interrupt priority LSB set to low
 733   1         - I2C0 Slave interrupt priority LSB set to low
 734   1         - Timer 4 interrupt priority LSB set to high
 735   1         - Timer 5 interrupt priority LSB set to low
 736   1         - UART1 interrupt priority LSB set to low
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 13  

 737   1         ***********************************************************************/
 738   1        EIP2 = EIP2_PCL0__LOW | EIP2_PI2C0__LOW | EIP2_PT4__HIGH | EIP2_PT5__LOW
 739   1            | EIP2_PS1__LOW;
 740   1        // [EIP2 - Extended Interrupt Priority 2]$
 741   1      
 742   1        // $[EIP2H - Extended Interrupt Priority 2 High]
 743   1        // [EIP2H - Extended Interrupt Priority 2 High]$
 744   1      
 745   1        // $[IE - Interrupt Enable]
 746   1        /***********************************************************************
 747   1         - Disable all interrupt sources
 748   1         - Disable external interrupt 0
 749   1         - Disable external interrupt 1
 750   1         - Enable interrupt requests generated by SPI0
 751   1         - Disable all Timer 0 interrupt
 752   1         - Disable all Timer 1 interrupt
 753   1         - Enable interrupt requests generated by the TF2L or TF2H flags
 754   1         - Disable UART0 interrupt
 755   1         ***********************************************************************/
 756   1        SFRPAGE = 0x00;
 757   1        IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__ENABLED
 758   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__ENABLED
 759   1            | IE_ES0__DISABLED;
 760   1        // [IE - Interrupt Enable]$
 761   1      
 762   1        // $[IP - Interrupt Priority]
 763   1        // [IP - Interrupt Priority]$
 764   1      
 765   1        // $[IPH - Interrupt Priority High]
 766   1        // [IPH - Interrupt Priority High]$
 767   1      
 768   1      }
 769          
 770          extern void
 771          ADC_0_enter_DefaultMode_from_RESET (void)
 772          {
 773   1        // $[ADC0CN2 - ADC0 Control 2]
 774   1        // [ADC0CN2 - ADC0 Control 2]$
 775   1      
 776   1        // $[ADC0CN1 - ADC0 Control 1]
 777   1        /***********************************************************************
 778   1         - ADC0 operates in 10-bit mode
 779   1         - Right justified. No shifting applied
 780   1         - Perform and Accumulate 1 conversion
 781   1         ***********************************************************************/
 782   1        ADC0CN1 = ADC0CN1_ADBITS__10_BIT | ADC0CN1_ADSJST__RIGHT_NO_SHIFT
 783   1            | ADC0CN1_ADRPT__ACC_1;
 784   1        // [ADC0CN1 - ADC0 Control 1]$
 785   1      
 786   1        // $[ADC0MX - ADC0 Multiplexer Selection]
 787   1        /***********************************************************************
 788   1         - Select ADC0.13
 789   1         ***********************************************************************/
 790   1        ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 791   1        // [ADC0MX - ADC0 Multiplexer Selection]$
 792   1      
 793   1        // $[ADC0CF2 - ADC0 Power Control]
 794   1        /***********************************************************************
 795   1         - The ADC0 ground reference is the GND pin
 796   1         - The ADC0 voltage reference is the VDD pin
 797   1         - Power Up Delay Time = 0x1F
 798   1         ***********************************************************************/
 799   1        ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 14  

 800   1            | (0x1F << ADC0CF2_ADPWR__SHIFT);
 801   1        // [ADC0CF2 - ADC0 Power Control]$
 802   1      
 803   1        // $[ADC0CF0 - ADC0 Configuration]
 804   1        /***********************************************************************
 805   1         - ADCCLK = SYSCLK
 806   1         - SAR Clock Divider = 0x01
 807   1         ***********************************************************************/
 808   1        ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 809   1        // [ADC0CF0 - ADC0 Configuration]$
 810   1      
 811   1        // $[ADC0CF1 - ADC0 Configuration]
 812   1        /***********************************************************************
 813   1         - Disable low power mode
 814   1         - Conversion Tracking Time = 0x01
 815   1         ***********************************************************************/
 816   1        ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 817   1        // [ADC0CF1 - ADC0 Configuration]$
 818   1      
 819   1        // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 820   1        // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 821   1      
 822   1        // $[ADC0GTH - ADC0 Greater-Than High Byte]
 823   1        // [ADC0GTH - ADC0 Greater-Than High Byte]$
 824   1      
 825   1        // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 826   1        // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 827   1      
 828   1        // $[ADC0LTH - ADC0 Less-Than High Byte]
 829   1        // [ADC0LTH - ADC0 Less-Than High Byte]$
 830   1      
 831   1        // $[ADC0LTL - ADC0 Less-Than Low Byte]
 832   1        // [ADC0LTL - ADC0 Less-Than Low Byte]$
 833   1      
 834   1        // $[ADC0ASCF - ADC0 Autoscan Configuration]
 835   1        // [ADC0ASCF - ADC0 Autoscan Configuration]$
 836   1      
 837   1        // $[ADC0CN0 - ADC0 Control 0]
 838   1        /***********************************************************************
 839   1         - Enable ADC0 
 840   1         ***********************************************************************/
 841   1        ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 842   1        // [ADC0CN0 - ADC0 Control 0]$
 843   1      
 844   1      }
 845          
 846          extern void
 847          PORTS_3_enter_DefaultMode_from_RESET (void)
 848          {
 849   1        // $[P3 - Port 3 Pin Latch]
 850   1        // [P3 - Port 3 Pin Latch]$
 851   1      
 852   1        // $[P3MDOUT - Port 3 Output Mode]
 853   1        // [P3MDOUT - Port 3 Output Mode]$
 854   1      
 855   1        // $[P3MDIN - Port 3 Input Mode]
 856   1        /***********************************************************************
 857   1         - P3.0 pin is configured for analog mode
 858   1         - P3.1 pin is configured for analog mode
 859   1         - P3.2 pin is configured for analog mode
 860   1         - P3.3 pin is configured for analog mode
 861   1         - P3.4 pin is configured for digital mode
 862   1         - P3.7 pin is configured for digital mode
C51 COMPILER V9.60.0.0   INITDEVICE                                                        01/25/2022 12:03:51 PAGE 15  

 863   1         ***********************************************************************/
 864   1        P3MDIN = P3MDIN_B0__ANALOG | P3MDIN_B1__ANALOG | P3MDIN_B2__ANALOG
 865   1            | P3MDIN_B3__ANALOG | P3MDIN_B4__DIGITAL | P3MDIN_B7__DIGITAL;
 866   1        // [P3MDIN - Port 3 Input Mode]$
 867   1      
 868   1      }
 869          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    379    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
